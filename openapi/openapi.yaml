openapi: 3.0.0

info:
  version: 1.0.0
  title: Go-Auth
  description: An authentication and authorization micro service API

tags:
  - name: Sign up
    description: Sign up flow for registering new users.
  - name: Log in
    description: Log in flow for authenticating users.

paths:
  /signup:
    post:
      tags:
        - Sign up
      description: Creates new user account in system.
      requestBody:
        $ref: '#/components/requestBodies/SignupRequest'
      responses:
        201:
          description: Succesfully signed up (created) a new user.
        409:
          description: Either an username or an email is already used.
            Returns a generic message, for security reasons.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: Returns an instance of ProblemDetails response
            which occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

  /login:
    post:
      tags:
        - Log in
      description: Endpoint for authenticating a user based on username
        and password
      requestBody:
        required: true
        $ref: '#/components/requestBodies/LoginUnauthenticatedRequest'

      responses:
        200:
          description: Submitted credentials are valid and response contains
            a JWT access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        401:
          description: User submitted invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

            
components:
  schemas:

    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
          description: A JWT access token generated for this login session
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      additionalProperties: false
      required:
        - access_token


    ProblemDetails:
      type: object
      description: A problem details response, which occured during processing
        of a request (trying to adhere to RFC 7807)
      properties:
        status_code:
          type: integer
          description: A http status code describing a problem
          example: 500
        title:
          type: string
          description: A short, human-readable summary of the problem type
          example: Entered email is alredy used
        detail:
          type: string
          description: Human-readable explanation specific to this
            occurrence of the problem
          example: Entered email address 'foo@bar.com' is already used
        instance:
          type: string
          format: URI
          description: A URI reference that identifies the specific occurrence
            of the problem.
          example: /signup
      additionalProperties: false
      required:
        - status_code
        - title
        - detail
        - instance

  
  requestBodies:
    SignupRequest:
      required: true
      description: Request body for signing up new user
      content:
        application/json:
          schema:
            type: object
            required:
              - username
              - email
              - password
            properties:
              username:
                type: string
                description: Username with which new user account will be
                  identified in the system
                maxLength: 30
                minLength: 3
                example: Nesquiko12
                pattern: ^(?=[a-zA-Z0-9]{3,30}$).*
                x-oapi-codegen-extra-tags:
                  validate: required
              email:
                type: string
                description: Email address of a new user account
                maxLength: 320
                pattern: ^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$
                example: foo@bar.foo.com
                x-oapi-codegen-extra-tags:
                  validate: required
              password:
                type: string
                description: Password for getting access to the new user account
                maxLength: 32
                minLength: 6
                pattern: ^((?=\S*?[A-Z])(?=\S*?[a-z])(?=\S*?[0-9]).{6,32})\S$
                example: mySecretPassword123
                x-oapi-codegen-extra-tags:
                  validate: required
            additionalProperties: false

    LoginUnauthenticatedRequest:
      description: Request body for logging in a user. Additional 2FA is
        required for the user to be fully logged in.
      content:
        application/json:
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
                description: Username of an user account
                maxLength: 30
                minLength: 3
                example: Nesquiko12
                pattern: ^(?=[a-zA-Z0-9]{3,30}$).*
                x-oapi-codegen-extra-tags:
                  validate: required
              password:
                type: string
                description: Password of an user account
                maxLength: 32
                minLength: 6
                pattern: ^((?=\S*?[A-Z])(?=\S*?[a-z])(?=\S*?[0-9]).{6,32})\S$
                example: mySecretPassword123
                x-oapi-codegen-extra-tags:
                  validate: required
            additionalProperties: false
